{
	"Nodes": {
		"0": {
			"Id": 0,
			"ImageName": "biodepot/downloadurl",
			"ImageTag": "latest",
			"Title": "downloadURL",
			"Command": [
				"sh -c '[ -n \"${skip}\" ] || /root/download.sh  \"$@\"' _ "
			],
			"ArgTypes": {
				"URL": {
					"type": "text list",
					"argument": true,
					"flag": null,
					"env": null,
					"label": "URL(s)",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"concatenateFile": {
					"type": "file",
					"argument": null,
					"flag": "--concatenateFile",
					"env": null,
					"label": "Download and join into one file",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"decompress": {
					"type": "bool",
					"argument": null,
					"flag": "--decompress",
					"env": null,
					"label": "Decompress files",
					"default": true,
					"input_file": null,
					"output_file": null
				},
				"directory": {
					"type": "directory",
					"argument": null,
					"flag": "--directory",
					"env": null,
					"label": "Download directory",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"overwite": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "overwrite",
					"label": "Overwrite",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"overwrite": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "clobber",
					"label": "Overwrite existing files",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"skip": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "skip",
					"label": "Skip downloads",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"trigger": {
					"type": "directory",
					"argument": null,
					"flag": null,
					"env": "work_dir",
					"label": "Work directory",
					"default": null,
					"input_file": null,
					"output_file": null
				}
			},
			"ArgOrder": [
				"URL"
			],
			"OptionsChecked": {
				"concatenateFile": false,
				"decompress": false,
				"saveLog": false
			},
			"RequiredParams": [
				"URL",
				"directory",
				"overwrite",
				"skip"
			],
			"ResourceReqs": {
				"MemMb": 8000,
				"Cpus": 8,
				"Gpus": 0
			},
			"Async": false,
			"BarrierFor": null,
			"Iterate": true,
			"IterGroupSize": {
				"URL": 1
			},
			"IterAttrs": [
				"URL"
			]
		},
		"1": {
			"Id": 1,
			"ImageName": "biodepot/multialign",
			"ImageTag": "latest",
			"Title": "Multi_index",
			"Command": [
				"sh -c '[ -n \"${skip}\" ] || runMultiIndex.sh  \"$@\"' _ "
			],
			"ArgTypes": {
				"Trigger": {
					"type": "directory",
					"argument": null,
					"flag": null,
					"env": "work_dir",
					"label": "Work directory",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"genomeDir": {
					"type": "string",
					"argument": null,
					"flag": null,
					"env": null,
					"label": null,
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"genomefile": {
					"type": "file",
					"argument": null,
					"flag": null,
					"env": "genome_file",
					"label": "Genome file",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"gtffile": {
					"type": "file",
					"argument": null,
					"flag": null,
					"env": "gtf_file",
					"label": "GTF file",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"indicesdir": {
					"type": "directory",
					"argument": null,
					"flag": null,
					"env": "indices_dir",
					"label": "Index directory",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"overwrite": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "overwrite",
					"label": "Overwrite files",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"runThreadN": {
					"type": "int",
					"argument": null,
					"flag": null,
					"env": "n_threads",
					"label": "Number of threads",
					"default": 1,
					"input_file": null,
					"output_file": null
				},
				"skip": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "skip",
					"label": "Skip indexing",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"useKallisto": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "useKallisto",
					"label": "Use Kallisto",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"usePiscem": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "usePiscem",
					"label": "Use Piscem",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"useSalmon": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "useSalmon",
					"label": "Use Salmon",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"useSplicei": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "useSplicei",
					"label": "Use splicei reference",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"useSpliceu": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "useSpliceu",
					"label": "Use spliceu reference",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"useStar": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "useStar",
					"label": "Use STAR",
					"default": null,
					"input_file": null,
					"output_file": null
				}
			},
			"ArgOrder": [],
			"OptionsChecked": {
				"genomeChrBinNbits": false,
				"genomeSAindexNbases": false,
				"genomeSAsparseD": false,
				"genomeSuffixLengthMax": false,
				"saveLog": false,
				"sjdbFileChrStartEnd ": false,
				"sjdbGTFchrPrefix ": false,
				"sjdbGTFfeatureExon": false,
				"sjdbGTFfile": true,
				"sjdbGTFtagExonParentGene": false,
				"sjdbGTFtagExonParentTranscript": false,
				"sjdbInsertSave ": false,
				"sjdbOverhang": false,
				"sjdbScore": false,
				"skipIndex": false
			},
			"RequiredParams": [
				"genomefile",
				"gtffile",
				"runThreadN",
				"overwrite",
				"indicesdir",
				"useStar",
				"useKallisto",
				"usePiscem",
				"useSalmon",
				"useSplicei",
				"useSpliceu",
				"skip"
			],
			"ResourceReqs": {
				"MemMb": 8000,
				"Cpus": 8,
				"Gpus": 0
			},
			"Async": false,
			"BarrierFor": null,
			"Iterate": false,
			"IterGroupSize": {},
			"IterAttrs": []
		},
		"10": {
			"Id": 10,
			"ImageName": "biodepot/gather_features",
			"ImageTag": "latest",
			"Title": "Gather_features",
			"Command": [
				"gather_features.py"
			],
			"ArgTypes": {
				"OutputDir": {
					"type": "string",
					"argument": null,
					"flag": null,
					"env": null,
					"label": null,
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"Trigger": {
					"type": "directory",
					"argument": null,
					"flag": "-d ",
					"env": null,
					"label": "Output directory",
					"default": "",
					"input_file": null,
					"output_file": null
				},
				"Trigger2": {
					"type": "string",
					"argument": null,
					"flag": null,
					"env": null,
					"label": null,
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"aligndir": {
					"type": "directory",
					"argument": null,
					"flag": null,
					"env": "aligndir",
					"label": "Alignment directory",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"cb_final_layer": {
					"type": "str",
					"argument": null,
					"flag": null,
					"env": "cb_final_layer",
					"label": "Cellbender final layer",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"cb_original_layer": {
					"type": "str",
					"argument": null,
					"flag": null,
					"env": "cb_original_layer",
					"label": "Cellbender original layer",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"cellbender_file": {
					"type": "str",
					"argument": null,
					"flag": null,
					"env": "cellbender_file",
					"label": "Cellbender file",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"features_dirs": {
					"type": "directory list",
					"argument": true,
					"flag": null,
					"env": "features_dirs",
					"label": "Features directory",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"features_gex_dirs": {
					"type": "directory",
					"argument": true,
					"flag": null,
					"env": "features_gex_dirs",
					"label": "Features from expression directory",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"input_counts_name": {
					"type": "str",
					"argument": null,
					"flag": null,
					"env": "input_counts_name",
					"label": "Input counts name",
					"default": "unfiltered_counts.h5ad",
					"input_file": null,
					"output_file": null
				},
				"output_counts_name": {
					"type": "str",
					"argument": null,
					"flag": null,
					"env": "output_counts_name",
					"label": "Output counts name",
					"default": "merged_counts.h5ad",
					"input_file": null,
					"output_file": null
				},
				"output_features_name": {
					"type": "str",
					"argument": null,
					"flag": null,
					"env": "output_features_name",
					"label": "Output features name",
					"default": "merged_features.h5ad",
					"input_file": null,
					"output_file": null
				}
			},
			"ArgOrder": [
				"features_dirs",
				"features_gex_dirs"
			],
			"OptionsChecked": {
				"cb_final_layer": true,
				"cb_original_layer": true,
				"cellbender_file": true,
				"feature_assignment": false,
				"features_align_dirs": false,
				"features_gex_dirs": true,
				"input_counts_name": true,
				"output_counts_name": true,
				"output_features_name": true
			},
			"RequiredParams": [
				"features_dirs",
				"aligndir"
			],
			"ResourceReqs": {
				"MemMb": 8000,
				"Cpus": 8,
				"Gpus": 0
			},
			"Async": false,
			"BarrierFor": null,
			"Iterate": false,
			"IterGroupSize": {
				"features_dirs": 1
			},
			"IterAttrs": []
		},
		"11": {
			"Id": 11,
			"ImageName": "biodepot/process_features",
			"ImageTag": "latest",
			"Title": "feature_finder",
			"Command": [
				"assignBarcodes "
			],
			"ArgTypes": {
				"as_named": {
					"type": "bool",
					"argument": null,
					"flag": "-a ",
					"env": null,
					"label": "Do not group fastq files by sample name",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"averageReadLength": {
					"type": "int",
					"argument": null,
					"flag": "-L ",
					"env": null,
					"label": "Average read length",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"barcodePattern": {
					"type": "str",
					"argument": null,
					"flag": "--barcode_fastq_pattern ",
					"env": null,
					"label": "Barcode fastq pattern",
					"default": "_R1_",
					"input_file": null,
					"output_file": null
				},
				"barcode_constant_offset": {
					"type": "int",
					"argument": null,
					"flag": "-B ",
					"env": null,
					"label": "Offset for barcode sequences",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"barcode_length": {
					"type": "int",
					"argument": null,
					"flag": "-b ",
					"env": null,
					"label": "Cell barcode length",
					"default": 16,
					"input_file": null,
					"output_file": null
				},
				"barcode_n": {
					"type": "int",
					"argument": null,
					"flag": null,
					"env": null,
					"label": "Maximum number of N's in cellular barcode",
					"default": 1,
					"input_file": null,
					"output_file": null
				},
				"consumerThreads": {
					"type": "int",
					"argument": null,
					"flag": "-c ",
					"env": null,
					"label": "Number of threads to process each sample",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"debugmode": {
					"type": "bool",
					"argument": null,
					"flag": "-v ",
					"env": null,
					"label": "Verbose messages",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"feature_constant_offset": {
					"type": "int",
					"argument": null,
					"flag": "-o ",
					"env": null,
					"label": "Number of constant basepairs in feature sequences",
					"default": 26,
					"input_file": null,
					"output_file": null
				},
				"feature_n": {
					"type": "int",
					"argument": null,
					"flag": null,
					"env": null,
					"label": "Maximum number of N's in feature barcode",
					"default": 3,
					"input_file": null,
					"output_file": null
				},
				"features_file": {
					"type": "file",
					"argument": null,
					"flag": "-f ",
					"env": null,
					"label": "Features sequences file",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"forwardPattern": {
					"type": "str",
					"argument": null,
					"flag": "--forward_fastq_pattern ",
					"env": null,
					"label": "Forward fastq pattern",
					"default": "_R2_",
					"input_file": null,
					"output_file": null
				},
				"imputfiles": {
					"type": "file list",
					"argument": true,
					"flag": null,
					"env": null,
					"label": "Feature barcode fastq files",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"inputdirs": {
					"type": "directory list",
					"argument": true,
					"flag": null,
					"env": null,
					"label": "Feature barcode fastq directories",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"keep_existing": {
					"type": "bool",
					"argument": null,
					"flag": "-k ",
					"env": null,
					"label": "Keep existing results",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"maxHammingDistance": {
					"type": "int",
					"argument": null,
					"flag": "-m ",
					"env": null,
					"label": "Max Hamming distance",
					"default": 5,
					"input_file": null,
					"output_file": null
				},
				"maxThreads": {
					"type": "int",
					"argument": null,
					"flag": "-T ",
					"env": null,
					"label": "Max total number of threads to use",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"maximum_mismatch": {
					"type": "int",
					"argument": null,
					"flag": "--max_barcode_mismatches ",
					"env": null,
					"label": "Maximum ambiguous barcodes matched before ignoring",
					"default": 3,
					"input_file": null,
					"output_file": null
				},
				"minPosterior": {
					"type": "double",
					"argument": null,
					"flag": "-M ",
					"env": null,
					"label": "Minimum probability for ambiguous barcode",
					"default": 0.975,
					"input_file": null,
					"output_file": null
				},
				"min_counts": {
					"type": "int",
					"argument": null,
					"flag": "-i ",
					"env": null,
					"label": "Minimum feature-umi counts for deduping",
					"default": 0,
					"input_file": null,
					"output_file": null
				},
				"nprocesses": {
					"type": "int",
					"argument": null,
					"flag": "-t ",
					"env": null,
					"label": "Maximum number of processes to fork off",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"outputdir": {
					"type": "directory",
					"argument": null,
					"flag": "-d ",
					"env": null,
					"label": "Output directory",
					"default": "",
					"input_file": null,
					"output_file": null
				},
				"parallelbyFile": {
					"type": "bool",
					"argument": null,
					"flag": "-P ",
					"env": null,
					"label": "Separate thread for each fastq file",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"process_in_order": {
					"type": "bool",
					"argument": null,
					"flag": "-a ",
					"env": null,
					"label": "Do not try to organize by sample name",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"readBufferLines": {
					"type": "int",
					"argument": null,
					"flag": "-R  ",
					"env": null,
					"label": "Number of lines in fastq read buffer",
					"default": 2048,
					"input_file": null,
					"output_file": null
				},
				"reversePattern": {
					"type": "str",
					"argument": null,
					"flag": "--reverse_fastq_pattern ",
					"env": null,
					"label": "Reverse fastq pattern",
					"default": "_R3_",
					"input_file": null,
					"output_file": null
				},
				"reverse_complement": {
					"type": "bool",
					"argument": null,
					"flag": "-r ",
					"env": null,
					"label": "Reverse complement sequence barcode",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"searchThreads": {
					"type": "int",
					"argument": null,
					"flag": "-S ",
					"env": null,
					"label": "Number of threads to use for hamming search (1:2:4)",
					"default": 4,
					"input_file": null,
					"output_file": null
				},
				"skip": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "skip",
					"label": "Skip execution",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"stringency": {
					"type": "int",
					"argument": null,
					"flag": "-s ",
					"env": null,
					"label": "UMI deduping stringency",
					"default": 1,
					"input_file": null,
					"output_file": null
				},
				"trigger": {
					"type": "directory",
					"argument": null,
					"flag": "-d ",
					"env": null,
					"label": "Output directory",
					"default": "",
					"input_file": null,
					"output_file": null
				},
				"umi_length": {
					"type": "int",
					"argument": null,
					"flag": "-u ",
					"env": null,
					"label": "Length of feature UMI",
					"default": 12,
					"input_file": null,
					"output_file": null
				},
				"whitelist": {
					"type": "file",
					"argument": null,
					"flag": "-w ",
					"env": null,
					"label": "Cell barcode whitelist",
					"default": null,
					"input_file": null,
					"output_file": null
				}
			},
			"ArgOrder": [
				"inputdirs",
				"imputfiles"
			],
			"OptionsChecked": {
				"as_named": false,
				"averageReadLength": true,
				"barcodePattern": true,
				"barcode_constant_offset": false,
				"barcode_n": false,
				"consumerThreads": false,
				"debugmode": false,
				"feature_constant_offset": true,
				"feature_n": false,
				"forwardPattern": true,
				"imputfiles": false,
				"inputdirs": true,
				"maxThreads": true,
				"maximum_mismatch": false,
				"minPosterior": false,
				"min_counts": true,
				"nprocesses": true,
				"parallelbyFile": false,
				"process_in_order": false,
				"readBufferLines": true,
				"reversePattern": false,
				"reverse_complement": false,
				"searchThreads": true,
				"stringency": true
			},
			"RequiredParams": [
				"keep_existing",
				"whitelist",
				"barcode_length",
				"features_file",
				"maxHammingDistance",
				"outputdir",
				"umi_length",
				"skip"
			],
			"ResourceReqs": {
				"MemMb": 8000,
				"Cpus": 8,
				"Gpus": 0
			},
			"Async": false,
			"BarrierFor": null,
			"Iterate": false,
			"IterGroupSize": {
				"imputfiles": 1,
				"inputdirs": 1
			},
			"IterAttrs": []
		},
		"12": {
			"Id": 12,
			"ImageName": "biodepot/alpine-bash",
			"ImageTag": "3.7",
			"Title": "Assign_cell_type",
			"Command": [
				"echo _bwb{filename}"
			],
			"ArgTypes": {
				"File": {
					"type": "string",
					"argument": null,
					"flag": null,
					"env": null,
					"label": null,
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"filename": {
					"type": "file",
					"argument": null,
					"flag": null,
					"env": null,
					"label": "Filename",
					"default": null,
					"input_file": null,
					"output_file": null
				}
			},
			"ArgOrder": [],
			"OptionsChecked": {},
			"RequiredParams": [
				"filename"
			],
			"ResourceReqs": {
				"MemMb": 8000,
				"Cpus": 8,
				"Gpus": 0
			},
			"Async": false,
			"BarrierFor": null,
			"Iterate": false,
			"IterGroupSize": {},
			"IterAttrs": []
		},
		"2": {
			"Id": 2,
			"ImageName": "biodepot/multialign",
			"ImageTag": "latest",
			"Title": "Multi_align",
			"Command": [
				"sh -c '[ -n \"${skip}\" ] || runMultiAlign.sh  \"$@\"' _ "
			],
			"ArgTypes": {
				"CBLEN": {
					"type": "int",
					"argument": null,
					"flag": null,
					"env": "CBLEN",
					"label": "Cell barcode length",
					"default": 16,
					"input_file": null,
					"output_file": null
				},
				"R1pattern": {
					"type": "str",
					"argument": null,
					"flag": null,
					"env": "R1pattern",
					"label": "R1 files pattern",
					"default": "_R1_",
					"input_file": null,
					"output_file": null
				},
				"R2pattern": {
					"type": "str",
					"argument": null,
					"flag": null,
					"env": "R2pattern",
					"label": "R2 files pattern",
					"default": "_R2_",
					"input_file": null,
					"output_file": null
				},
				"UMILEN": {
					"type": "int",
					"argument": null,
					"flag": null,
					"env": "UMILEN",
					"label": "Cell UMI  length",
					"default": 12,
					"input_file": null,
					"output_file": null
				},
				"concatenate_files": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "concatenate_files",
					"label": "Concatenate sample files",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"fastq_suffix": {
					"type": "str",
					"argument": null,
					"flag": null,
					"env": "fastq_suffix",
					"label": "Fastq_suffix",
					"default": "fastq",
					"input_file": null,
					"output_file": null
				},
				"fastqdirs": {
					"type": "directory list",
					"argument": null,
					"flag": null,
					"env": "fastqdirs",
					"label": "Fastq directories (organized by experiment)",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"gzipped_fastq": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "gzipped_fastq",
					"label": "Gzipped fastq",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"indicesdir": {
					"type": "directory",
					"argument": null,
					"flag": null,
					"env": "indices_dir",
					"label": "Index directory",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"kallistocmd": {
					"type": "file",
					"argument": null,
					"flag": null,
					"env": "kallistocmd",
					"label": "Kallisto command",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"ntreads": {
					"type": "int",
					"argument": null,
					"flag": null,
					"env": "nthreads",
					"label": "Number of threads",
					"default": 8,
					"input_file": null,
					"output_file": null
				},
				"organize_samples": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "organize_samples",
					"label": "Organize by samples",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"outputdir": {
					"type": "directory",
					"argument": null,
					"flag": null,
					"env": "outputdir",
					"label": "Base output directory ",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"overwrite": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "overwrite",
					"label": "Overwrite files",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"piscemcmd": {
					"type": "file",
					"argument": null,
					"flag": null,
					"env": "piscemcmd",
					"label": "Piscem command",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"salmoncmd": {
					"type": "file",
					"argument": null,
					"flag": null,
					"env": "salmoncmd",
					"label": "Salmon command",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"sampledirs": {
					"type": "directory list",
					"argument": null,
					"flag": null,
					"env": "sampledirs",
					"label": null,
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"skip": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "skip",
					"label": "Skip alignment",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"starcmd": {
					"type": "file",
					"argument": null,
					"flag": null,
					"env": "starcmd",
					"label": "STAR command",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"useKallisto": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "useKallisto",
					"label": "Use Kallisto",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"usePiscem": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "usePiscem",
					"label": "Use Piscem",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"useSalmon": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "useSalmon",
					"label": "Use Salmon",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"useSplicei": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "useSplicei",
					"label": "Use splicei reference",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"useSpliceu": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "useSpliceu",
					"label": "Use spliceu reference",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"useStar": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "useStar",
					"label": "Use STAR",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"whitelist": {
					"type": "file",
					"argument": null,
					"flag": null,
					"env": "whitelist",
					"label": "Whitelist file",
					"default": null,
					"input_file": null,
					"output_file": null
				}
			},
			"ArgOrder": [],
			"OptionsChecked": {
				"alevin_whitelist": false,
				"alignEndsProtrude": false,
				"alignEndsType": false,
				"alignIntronMax": false,
				"alignIntronMin": false,
				"alignMatesGapMax": false,
				"alignSJDBoverhangMin": true,
				"alignSJoverhangMin": false,
				"alignSJstitchMismatchNmax": false,
				"alignSoftClipAtReferenceEnds": false,
				"alignSplicedMateMapLmin": false,
				"alignSplicedMateMapLminOverLmate": false,
				"alignTranscriptsPerReadNmax": false,
				"alignTranscriptsPerWindowNmax": false,
				"alignWindowsPerReadNmax": false,
				"apelist": false,
				"bamRemoveDuplicatesMate2basesN": false,
				"bamRemoveDuplicatesType": false,
				"chimFilter": false,
				"chimJunctionOverhangMin": false,
				"chimOutType": false,
				"chimScoreDropMax": false,
				"chimScoreJunctionNonGTAG": false,
				"chimScoreMin": false,
				"chimScoreSeparation": false,
				"chimSegmentMin": false,
				"chimSegmentReadGapMax": false,
				"clip3pAdapterMMp": false,
				"clip3pAdapterSeq": false,
				"clip3pAfterAdapterNbases": false,
				"clip3pNbases": false,
				"clip5pNbases": false,
				"genomeLoad": true,
				"kallisto_whitelist": false,
				"kallistocmd": false,
				"limitIObufferSize": false,
				"limitOutSAMoneReadBytes": false,
				"multipleSample": false,
				"outBAMcompression": false,
				"outBAMsortingThreadN": false,
				"outFilterIntronMotifs": false,
				"outFilterMatchNmin": false,
				"outFilterMatchNminOverLread": false,
				"outFilterMismatchNmax": false,
				"outFilterMismatchNoverLmax ": false,
				"outFilterMismatchNoverReadLmax": false,
				"outFilterMultimapNmax": true,
				"outFilterMultimapScoreRange": false,
				"outFilterScoreMin": false,
				"outFilterScoreMinOverLread": false,
				"outFilterType": false,
				"outMultimapperOrder": false,
				"outReadsUnmapped": false,
				"outSAMattrIHstart": false,
				"outSAMattrRGline": false,
				"outSAMattributes": true,
				"outSAMfilter": false,
				"outSAMflagAND": false,
				"outSAMflagOR": false,
				"outSAMheaderCommentFile": false,
				"outSAMheaderHD": false,
				"outSAMheaderPG": false,
				"outSAMmapqUnique": false,
				"outSAMmode": false,
				"outSAMmultNmax": false,
				"outSAMorder": false,
				"outSAMprimaryFlag": false,
				"outSAMreadID": false,
				"outSAMstrandField": false,
				"outSAMtype": true,
				"outSAMunmapped": false,
				"outStd": false,
				"outTmpDir": false,
				"outWigNorm": false,
				"outWigReferencesPrefix": false,
				"outWigStrand": false,
				"outWigType": false,
				"outputFilePrefix": false,
				"parametersFiles": false,
				"piscemcmd": false,
				"quantMode": true,
				"quantTranscriptomeBAMcompression": false,
				"quantTranscriptomeBan": true,
				"readFilesCommand": true,
				"readMapNumber": false,
				"readMatesLengthsIn": false,
				"readNameSeparator": false,
				"runRNGseed": false,
				"runThreadN": true,
				"salmoncmd": false,
				"sampledirs": false,
				"saveLog": false,
				"scoreDelBase": false,
				"scoreDelOpen": false,
				"scoreGap": false,
				"scoreGapATAC": false,
				"scoreGapGCAG": false,
				"scoreGapNoncan": false,
				"scoreGenomicLengthLog2scale": false,
				"scoreInsBase": false,
				"scoreInsOpen": false,
				"scoreStitchSJshift": false,
				"seedMultimapNmax": false,
				"seedNoneLociPerWindow": false,
				"seedPerReadNmax": false,
				"seedPerWindowNmax": false,
				"seedSearchLmax": false,
				"seedSearchStartLmax": false,
				"seedSearchStartLmaxOverLread": false,
				"spelist": false,
				"star_whitelist": true,
				"starcmd": false,
				"sysShell": false,
				"twopass1readsN ": false,
				"twopassMode": true,
				"winAnchorDistNbins": false,
				"winAnchorMultimapNmax": false,
				"winBinNbits": false,
				"winFlankNbins": false,
				"winReadCoverageBasesMin": false,
				"winReadCoverageRelativeMin": false
			},
			"RequiredParams": [
				"fastqdirs",
				"outputdir",
				"ntreads",
				"indicesdir",
				"useStar",
				"useKallisto",
				"usePiscem",
				"useSalmon",
				"useSplicei",
				"useSpliceu",
				"overwrite",
				"whitelist",
				"R1pattern",
				"R2pattern",
				"gzipped_fastq",
				"fastq_suffix",
				"CBLEN",
				"UMILEN",
				"organize_samples",
				"concatenate_files",
				"skip"
			],
			"ResourceReqs": {
				"MemMb": 8000,
				"Cpus": 8,
				"Gpus": 0
			},
			"Async": false,
			"BarrierFor": null,
			"Iterate": true,
			"IterGroupSize": {
				"fastqdirs": 1,
				"sampledirs": 1
			},
			"IterAttrs": [
				"fastqdirs"
			]
		},
		"3": {
			"Id": 3,
			"ImageName": "biodepot/scrna-matrices",
			"ImageTag": "latest",
			"Title": "read_counts",
			"Command": [
				"read_counts.py "
			],
			"ArgTypes": {
				"alignsdir": {
					"type": "directory list",
					"argument": null,
					"flag": null,
					"env": "alignsdir",
					"label": "Alignment directories",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"filter_features": {
					"type": "bool",
					"argument": null,
					"flag": "--filter_features",
					"env": "filter_features",
					"label": "Filter out features in gene list",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"inputDir": {
					"type": "directory",
					"argument": null,
					"flag": null,
					"env": "outputdir",
					"label": "Base output directory ",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"nThreads": {
					"type": "int",
					"argument": null,
					"flag": "--nThreads ",
					"env": "nThreads",
					"label": "Number of Threads",
					"default": 1,
					"input_file": null,
					"output_file": null
				},
				"overwrite": {
					"type": "bool",
					"argument": null,
					"flag": "--overwrite ",
					"env": "overwrite",
					"label": "Overwrite",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"skip": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "skip",
					"label": "Skip execution",
					"default": null,
					"input_file": null,
					"output_file": null
				}
			},
			"ArgOrder": [],
			"OptionsChecked": {
				"mtpercent": false,
				"nThreads": true,
				"tablesDir": false
			},
			"RequiredParams": [
				"alignsdir",
				"overwrite",
				"filter_features",
				"skip"
			],
			"ResourceReqs": {
				"MemMb": 8000,
				"Cpus": 8,
				"Gpus": 0
			},
			"Async": false,
			"BarrierFor": null,
			"Iterate": false,
			"IterGroupSize": {
				"alignsdir": 1
			},
			"IterAttrs": [
				"alignsDir"
			]
		},
		"4": {
			"Id": 4,
			"ImageName": "biodepot/format-fa-gtf-10x-sc",
			"ImageTag": "latest",
			"Title": "10x_format_fa_gtf",
			"Command": [
				"sh -c '[ -n \"${skip}\" ] || format-fa-gtf.pl \"$@\"' _ "
			],
			"ArgTypes": {
				"inputfa": {
					"type": "file",
					"argument": null,
					"flag": null,
					"env": "INPUTFA",
					"label": "Input fa file",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"inputfeaturefa": {
					"type": "file",
					"argument": null,
					"flag": null,
					"env": "INPUTFFA",
					"label": "Input Features fasta file",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"inputfeaturegtf": {
					"type": "file",
					"argument": null,
					"flag": null,
					"env": "INPUTFGTF",
					"label": "Input Features GTF file",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"inputgtf": {
					"type": "file",
					"argument": null,
					"flag": null,
					"env": "INPUTGTF",
					"label": "Input GTF file",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"outputfa": {
					"type": "file",
					"argument": null,
					"flag": null,
					"env": "OUTPUTFA",
					"label": "Output fa file",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"outputgtf": {
					"type": "file",
					"argument": null,
					"flag": null,
					"env": "OUTPUTGTF",
					"label": "Output GTF file",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"overwritefiles": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "overwrite",
					"label": "Overwrite existing files",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"skip": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "skip",
					"label": "Skip execution",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"trigger": {
					"type": "directory",
					"argument": null,
					"flag": "--directory",
					"env": null,
					"label": "Download directory",
					"default": null,
					"input_file": null,
					"output_file": null
				}
			},
			"ArgOrder": [],
			"OptionsChecked": {
				"inputfeaturefa": true,
				"inputfeaturegtf": true
			},
			"RequiredParams": [
				"inputfa",
				"outputfa",
				"inputgtf",
				"outputgtf",
				"overwritefiles",
				"skip"
			],
			"ResourceReqs": {
				"MemMb": 8000,
				"Cpus": 8,
				"Gpus": 0
			},
			"Async": false,
			"BarrierFor": null,
			"Iterate": false,
			"IterGroupSize": {},
			"IterAttrs": []
		},
		"5": {
			"Id": 5,
			"ImageName": "biodepot/cellbender",
			"ImageTag": "0.3.2",
			"Title": "cellbender",
			"Command": [
				"remove_noise.sh "
			],
			"ArgTypes": {
				"additional_flags": {
					"type": "str",
					"argument": null,
					"flag": null,
					"env": "additional_flags",
					"label": "Additional flags",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"alignsDir": {
					"type": "directory list",
					"argument": true,
					"flag": null,
					"env": "alignsDir",
					"label": "Alignments directory",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"cb_counts_file": {
					"type": "str",
					"argument": null,
					"flag": null,
					"env": "cb_file",
					"label": "Cellbender counts file (in CellBender directory)",
					"default": "cellbender_counts.h5",
					"input_file": null,
					"output_file": null
				},
				"cb_subdir": {
					"type": "str",
					"argument": null,
					"flag": null,
					"env": "cb_subdir",
					"label": "CellBender subdirectory (path relative to input file directory)",
					"default": "cellbender",
					"input_file": null,
					"output_file": null
				},
				"cpu_cores": {
					"type": "int",
					"argument": null,
					"flag": null,
					"env": "cpu_cores",
					"label": "CPU cores for cellbender",
					"default": 1,
					"input_file": null,
					"output_file": null
				},
				"input_pattern": {
					"type": "str",
					"argument": null,
					"flag": null,
					"env": "input_pattern",
					"label": "Input file pattern",
					"default": "filter_counts.h5ad",
					"input_file": null,
					"output_file": null
				},
				"layername": {
					"type": "str",
					"argument": null,
					"flag": null,
					"env": "layername",
					"label": "CellBender layer name",
					"default": "denoised",
					"input_file": null,
					"output_file": null
				},
				"nThreads": {
					"type": "int",
					"argument": null,
					"flag": null,
					"env": "nThreads",
					"label": "Number of simultaneous cellbender processes",
					"default": 1,
					"input_file": null,
					"output_file": null
				},
				"output_pattern": {
					"type": "str",
					"argument": null,
					"flag": null,
					"env": "output_pattern",
					"label": "Output file pattern",
					"default": "final_counts.h5ad",
					"input_file": null,
					"output_file": null
				},
				"overwrite_cellbender": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "overwrite_cellbender",
					"label": "Overwrite existing cellbender files",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"overwrite_layer": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "overwrite_layer",
					"label": "Overwrite existing denoised layer",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"skip": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "skip",
					"label": "Skip execution",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"tablesDir": {
					"type": "string",
					"argument": null,
					"flag": null,
					"env": null,
					"label": null,
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"trigger": {
					"type": "string",
					"argument": null,
					"flag": null,
					"env": null,
					"label": null,
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"usecpu": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "usecpu",
					"label": "Use CPU (very slow)",
					"default": null,
					"input_file": null,
					"output_file": null
				}
			},
			"ArgOrder": [
				"alignsDir"
			],
			"OptionsChecked": {
				"additional_flags": false
			},
			"RequiredParams": [
				"alignsDir",
				"overwrite_cellbender",
				"input_pattern",
				"output_pattern",
				"nThreads",
				"cb_subdir",
				"cb_counts_file",
				"overwrite_layer",
				"usecpu",
				"layername",
				"cpu_cores",
				"skip"
			],
			"ResourceReqs": {
				"MemMb": 8000,
				"Cpus": 8,
				"Gpus": 1
			},
			"Async": false,
			"BarrierFor": null,
			"Iterate": false,
			"IterGroupSize": {
				"alignsDir": 1
			},
			"IterAttrs": [
				"alignsDir"
			]
		},
		"6": {
			"Id": 6,
			"ImageName": "biodepot/process_features",
			"ImageTag": "latest",
			"Title": "feature_finder",
			"Command": [
				"assignBarcodes "
			],
			"ArgTypes": {
				"as_named": {
					"type": "bool",
					"argument": null,
					"flag": "-a ",
					"env": null,
					"label": "Do not group fastq files by sample name",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"averageReadLength": {
					"type": "int",
					"argument": null,
					"flag": "-L ",
					"env": null,
					"label": "Average read length",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"barcodePattern": {
					"type": "str",
					"argument": null,
					"flag": "--barcode_fastq_pattern ",
					"env": null,
					"label": "Barcode fastq pattern",
					"default": "_R1_",
					"input_file": null,
					"output_file": null
				},
				"barcode_constant_offset": {
					"type": "int",
					"argument": null,
					"flag": "-B ",
					"env": null,
					"label": "Offset for barcode sequences",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"barcode_length": {
					"type": "int",
					"argument": null,
					"flag": "-b ",
					"env": null,
					"label": "Cell barcode length",
					"default": 16,
					"input_file": null,
					"output_file": null
				},
				"barcode_n": {
					"type": "int",
					"argument": null,
					"flag": null,
					"env": null,
					"label": "Maximum number of N's in cellular barcode",
					"default": 1,
					"input_file": null,
					"output_file": null
				},
				"consumerThreads": {
					"type": "int",
					"argument": null,
					"flag": "-c ",
					"env": null,
					"label": "Number of threads to process each sample",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"debugmode": {
					"type": "bool",
					"argument": null,
					"flag": "-v ",
					"env": null,
					"label": "Verbose messages",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"feature_constant_offset": {
					"type": "int",
					"argument": null,
					"flag": "-o ",
					"env": null,
					"label": "Number of constant basepairs in feature sequences",
					"default": 26,
					"input_file": null,
					"output_file": null
				},
				"feature_n": {
					"type": "int",
					"argument": null,
					"flag": null,
					"env": null,
					"label": "Maximum number of N's in feature barcode",
					"default": 3,
					"input_file": null,
					"output_file": null
				},
				"features_file": {
					"type": "file",
					"argument": null,
					"flag": "-f ",
					"env": null,
					"label": "Features sequences file",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"forwardPattern": {
					"type": "str",
					"argument": null,
					"flag": "--forward_fastq_pattern ",
					"env": null,
					"label": "Forward fastq pattern",
					"default": "_R2_",
					"input_file": null,
					"output_file": null
				},
				"imputfiles": {
					"type": "file list",
					"argument": true,
					"flag": null,
					"env": null,
					"label": "Feature barcode fastq files",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"inputdirs": {
					"type": "directory list",
					"argument": true,
					"flag": null,
					"env": null,
					"label": "Feature barcode fastq directories",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"keep_existing": {
					"type": "bool",
					"argument": null,
					"flag": "-k ",
					"env": null,
					"label": "Keep existing results",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"maxHammingDistance": {
					"type": "int",
					"argument": null,
					"flag": "-m ",
					"env": null,
					"label": "Max Hamming distance",
					"default": 5,
					"input_file": null,
					"output_file": null
				},
				"maxThreads": {
					"type": "int",
					"argument": null,
					"flag": "-T ",
					"env": null,
					"label": "Max total number of threads to use",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"maximum_mismatch": {
					"type": "int",
					"argument": null,
					"flag": "--max_barcode_mismatches ",
					"env": null,
					"label": "Maximum ambiguous barcodes matched before ignoring",
					"default": 3,
					"input_file": null,
					"output_file": null
				},
				"minPosterior": {
					"type": "double",
					"argument": null,
					"flag": "-M ",
					"env": null,
					"label": "Minimum probability for ambiguous barcode",
					"default": 0.975,
					"input_file": null,
					"output_file": null
				},
				"min_counts": {
					"type": "int",
					"argument": null,
					"flag": "-i ",
					"env": null,
					"label": "Minimum feature-umi counts for deduping",
					"default": 0,
					"input_file": null,
					"output_file": null
				},
				"nprocesses": {
					"type": "int",
					"argument": null,
					"flag": "-t ",
					"env": null,
					"label": "Maximum number of processes to fork off",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"outputdir": {
					"type": "directory",
					"argument": null,
					"flag": "-d ",
					"env": null,
					"label": "Output directory",
					"default": "",
					"input_file": null,
					"output_file": null
				},
				"parallelbyFile": {
					"type": "bool",
					"argument": null,
					"flag": "-P ",
					"env": null,
					"label": "Separate thread for each fastq file",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"process_in_order": {
					"type": "bool",
					"argument": null,
					"flag": "-a ",
					"env": null,
					"label": "Do not try to organize by sample name",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"readBufferLines": {
					"type": "int",
					"argument": null,
					"flag": "-R  ",
					"env": null,
					"label": "Number of lines in fastq read buffer",
					"default": 2048,
					"input_file": null,
					"output_file": null
				},
				"reversePattern": {
					"type": "str",
					"argument": null,
					"flag": "--reverse_fastq_pattern ",
					"env": null,
					"label": "Reverse fastq pattern",
					"default": "_R3_",
					"input_file": null,
					"output_file": null
				},
				"reverse_complement": {
					"type": "bool",
					"argument": null,
					"flag": "-r ",
					"env": null,
					"label": "Reverse complement sequence barcode",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"searchThreads": {
					"type": "int",
					"argument": null,
					"flag": "-S ",
					"env": null,
					"label": "Number of threads to use for hamming search (1:2:4)",
					"default": 4,
					"input_file": null,
					"output_file": null
				},
				"skip": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "skip",
					"label": "Skip execution",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"stringency": {
					"type": "int",
					"argument": null,
					"flag": "-s ",
					"env": null,
					"label": "UMI deduping stringency",
					"default": 1,
					"input_file": null,
					"output_file": null
				},
				"umi_length": {
					"type": "int",
					"argument": null,
					"flag": "-u ",
					"env": null,
					"label": "Length of feature UMI",
					"default": 12,
					"input_file": null,
					"output_file": null
				},
				"whitelist": {
					"type": "file",
					"argument": null,
					"flag": "-w ",
					"env": null,
					"label": "Cell barcode whitelist",
					"default": null,
					"input_file": null,
					"output_file": null
				}
			},
			"ArgOrder": [
				"imputfiles",
				"inputdirs"
			],
			"OptionsChecked": {
				"as_named": false,
				"averageReadLength": true,
				"barcodePattern": true,
				"barcode_constant_offset": false,
				"barcode_n": false,
				"consumerThreads": false,
				"debugmode": false,
				"feature_constant_offset": true,
				"feature_n": false,
				"forwardPattern": true,
				"imputfiles": false,
				"inputdirs": true,
				"maxThreads": true,
				"maximum_mismatch": false,
				"minPosterior": false,
				"min_counts": true,
				"nprocesses": true,
				"parallelbyFile": false,
				"process_in_order": false,
				"readBufferLines": true,
				"reversePattern": false,
				"reverse_complement": false,
				"searchThreads": true,
				"stringency": true
			},
			"RequiredParams": [
				"keep_existing",
				"whitelist",
				"barcode_length",
				"features_file",
				"maxHammingDistance",
				"outputdir",
				"umi_length",
				"skip"
			],
			"ResourceReqs": {
				"MemMb": 8000,
				"Cpus": 8,
				"Gpus": 0
			},
			"Async": false,
			"BarrierFor": null,
			"Iterate": true,
			"IterGroupSize": {
				"imputfiles": 1,
				"inputdirs": 1
			},
			"IterAttrs": [
				"imputfiles"
			]
		},
		"7": {
			"Id": 7,
			"ImageName": "biodepot/scrna-seq-start",
			"ImageTag": "latest",
			"Title": "Start",
			"Command": [
				"/data/morphic-scRNA-seq/Start/Dockerfiles/start.sh "
			],
			"ArgTypes": {
				"aligneddir": {
					"type": "directory",
					"argument": null,
					"flag": null,
					"env": "aligneddir",
					"label": "Aligned directory",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"alignedfiles": {
					"type": "patternQuery",
					"argument": null,
					"flag": null,
					"env": null,
					"label": "Aligned files",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"annotation_file": {
					"type": "file",
					"argument": null,
					"flag": null,
					"env": "annotation_file",
					"label": "Annotation file (gtf)",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"awscredentialsdir": {
					"type": "directory",
					"argument": null,
					"flag": null,
					"env": null,
					"label": "AWS credentials directory",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"bypass_star_index": {
					"type": "string",
					"argument": null,
					"flag": null,
					"env": null,
					"label": null,
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"countsdir": {
					"type": "directory",
					"argument": null,
					"flag": null,
					"env": "countsdir",
					"label": "Counts directory",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"download_dir": {
					"type": "directory",
					"argument": null,
					"flag": null,
					"env": "download_dir",
					"label": "Download directory",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"downloadindexlink": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "DOWNLOADINDEXLINK",
					"label": "Download index link",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"fastqfiles": {
					"type": "file list",
					"argument": null,
					"flag": null,
					"env": "fastqfiles",
					"label": "Fastq files (R1/R2)",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"genome_dir": {
					"type": "directory",
					"argument": null,
					"flag": null,
					"env": "genome_dir",
					"label": "Genome directory",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"genome_file": {
					"type": "file",
					"argument": null,
					"flag": null,
					"env": "genome_file",
					"label": "Genome reference file",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"genomegtfURLs": {
					"type": "text list",
					"argument": null,
					"flag": null,
					"env": "genomegtfURLs",
					"label": null,
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"overwrite": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "overwrite",
					"label": "Overwrite",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"raw_annotation_file": {
					"type": "file",
					"argument": null,
					"flag": null,
					"env": "raw_annotation_file",
					"label": "Raw annotation file (gtf)",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"raw_genome_file": {
					"type": "file",
					"argument": null,
					"flag": null,
					"env": "raw_genome_file",
					"label": "Raw genome file",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"s3bucket": {
					"type": "str",
					"argument": null,
					"flag": null,
					"env": null,
					"label": "s3 bucket",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"s3destdirectory": {
					"type": "str",
					"argument": null,
					"flag": null,
					"env": null,
					"label": "S3 destination directory ",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"s3downloaddir": {
					"type": "directory",
					"argument": null,
					"flag": null,
					"env": "s3downloaddir",
					"label": "Directory to store s3 downloads",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"s3sourcedirectory": {
					"type": "str",
					"argument": null,
					"flag": null,
					"env": null,
					"label": "S3 source directory ",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"skip_indexing": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "skip_indexing",
					"label": "Skip indexing",
					"default": true,
					"input_file": null,
					"output_file": null
				},
				"transcriptomefile": {
					"type": "file",
					"argument": null,
					"flag": null,
					"env": "transcriptomefile",
					"label": "Transcriptome file",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"trimmeddir": {
					"type": "string",
					"argument": null,
					"flag": null,
					"env": null,
					"label": null,
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"trimmedfastqfiles": {
					"type": "string",
					"argument": null,
					"flag": null,
					"env": null,
					"label": null,
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"useKallisto": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "useKallisto",
					"label": "Use Kallisto",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"usePiscem": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "usePiscem",
					"label": "Use Piscem",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"useSalmon": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "useSalmon",
					"label": "Use Salmon",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"useSplicei": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "useSplicei",
					"label": "Use splicei reference",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"useSpliceu": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "useSpliceu",
					"label": "Use spliceu reference",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"useStar": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "useStar",
					"label": "Use STAR",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"work_dir": {
					"type": "directory",
					"argument": null,
					"flag": null,
					"env": "work_dir",
					"label": "Work directory",
					"default": null,
					"input_file": null,
					"output_file": null
				}
			},
			"ArgOrder": [],
			"OptionsChecked": {
				"awscredentialsdir": true,
				"bypass_star_index": false,
				"downloadindexlink": false,
				"fastqfiles": true,
				"genomegtfURLs": false,
				"trimmedfastqfiles": false
			},
			"RequiredParams": [
				"work_dir",
				"genome_dir",
				"genome_file",
				"annotation_file",
				"skip_indexing",
				"transcriptomefile",
				"download_dir",
				"raw_genome_file",
				"raw_annotation_file",
				"s3sourcedirectory",
				"s3bucket",
				"s3downloaddir",
				"alignedfiles",
				"aligneddir",
				"s3destdirectory",
				"countsdir",
				"useStar",
				"useKallisto",
				"usePiscem",
				"useSalmon",
				"useSplicei",
				"useSpliceu",
				"overwrite"
			],
			"ResourceReqs": {
				"MemMb": 8000,
				"Cpus": 8,
				"Gpus": 0
			},
			"Async": false,
			"BarrierFor": null,
			"Iterate": false,
			"IterGroupSize": {
				"alignedfiles": 1,
				"fastqfiles": 1,
				"genomegtfURLs": 1
			},
			"IterAttrs": []
		},
		"8": {
			"Id": 8,
			"ImageName": "biodepot/scrna-matrices",
			"ImageTag": "latest",
			"Title": "Filter_counts",
			"Command": [
				"filter.sh "
			],
			"ArgTypes": {
				"alignsDir": {
					"type": "directory list",
					"argument": true,
					"flag": null,
					"env": "alignsDir",
					"label": "Alignments directory",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"maxgenes": {
					"type": "int",
					"argument": null,
					"flag": null,
					"env": "max_genes",
					"label": "Filter: max genes",
					"default": 2500,
					"input_file": null,
					"output_file": null
				},
				"mingenes": {
					"type": "int",
					"argument": null,
					"flag": null,
					"env": "min_genes",
					"label": "Filter: min genes",
					"default": 200,
					"input_file": null,
					"output_file": null
				},
				"mtpercent": {
					"type": "double",
					"argument": null,
					"flag": null,
					"env": "mtpercent",
					"label": "Filter: max mt% ",
					"default": 5,
					"input_file": null,
					"output_file": null
				},
				"n_mad": {
					"type": "int",
					"argument": null,
					"flag": null,
					"env": "n_mad",
					"label": "Standard deviations for n_genes",
					"default": 3,
					"input_file": null,
					"output_file": null
				},
				"nthreads": {
					"type": "int",
					"argument": null,
					"flag": null,
					"env": "nthreads",
					"label": "Number of threads",
					"default": 1,
					"input_file": null,
					"output_file": null
				},
				"overwrite": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "overwrite",
					"label": "Overwrite",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"skip": {
					"type": "bool",
					"argument": null,
					"flag": null,
					"env": "skip",
					"label": "Skip execution",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"tablesDir": {
					"type": "string",
					"argument": null,
					"flag": null,
					"env": null,
					"label": null,
					"default": null,
					"input_file": null,
					"output_file": null
				}
			},
			"ArgOrder": [
				"alignsDir"
			],
			"OptionsChecked": {
				"maxgenes": false,
				"mingenes": false
			},
			"RequiredParams": [
				"alignsDir",
				"overwrite",
				"mtpercent",
				"nthreads",
				"skip",
				"n_mad"
			],
			"ResourceReqs": {
				"MemMb": 8000,
				"Cpus": 8,
				"Gpus": 0
			},
			"Async": false,
			"BarrierFor": null,
			"Iterate": true,
			"IterGroupSize": {
				"alignsDir": 1
			},
			"IterAttrs": [
				"alignsDir"
			]
		},
		"9": {
			"Id": 9,
			"ImageName": "biodepot/gather_rna_seq",
			"ImageTag": "latest",
			"Title": "Gather_scRNA_seq",
			"Command": [
				"gather_files.sh"
			],
			"ArgTypes": {
				"aligns_dirs": {
					"type": "directory list",
					"argument": null,
					"flag": null,
					"env": "aligns_dirs",
					"label": "Alignments directory",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"aligns_patterns": {
					"type": "file list",
					"argument": null,
					"flag": null,
					"env": "aligns_patterns",
					"label": "Alignments file patterns",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"counts_dir": {
					"type": "directory list",
					"argument": null,
					"flag": null,
					"env": "counts_dir",
					"label": "Counts directory",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"counts_patterns": {
					"type": "text list",
					"argument": null,
					"flag": null,
					"env": "counts_patterns",
					"label": "Counts file patterns",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"features_dirs": {
					"type": "directory list",
					"argument": null,
					"flag": null,
					"env": "features_dirs",
					"label": "Features directory",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"features_patterns": {
					"type": "str",
					"argument": null,
					"flag": null,
					"env": "features_pattern",
					"label": "Featues file pattern",
					"default": null,
					"input_file": null,
					"output_file": null
				},
				"output_dir": {
					"type": "directory",
					"argument": null,
					"flag": null,
					"env": "output_dir",
					"label": "Output directory",
					"default": null,
					"input_file": null,
					"output_file": null
				}
			},
			"ArgOrder": [],
			"OptionsChecked": {
				"aligns_dir": false,
				"aligns_dirs": false,
				"aligns_patterns": false,
				"counts_patterns": true,
				"features_dir": false,
				"features_dirs": false,
				"features_patterns": false
			},
			"RequiredParams": [
				"counts_dir",
				"output_dir"
			],
			"ResourceReqs": {
				"MemMb": 8000,
				"Cpus": 8,
				"Gpus": 0
			},
			"Async": false,
			"BarrierFor": null,
			"Iterate": false,
			"IterGroupSize": {
				"aligns_dirs": 1,
				"aligns_patterns": 1,
				"counts_dir": 1,
				"counts_patterns": 1,
				"features_dirs": 1
			},
			"IterAttrs": []
		}
	},
	"NodeBaseProps": {
		"0": {
			"URL": null,
			"concatenateFile": "",
			"decompress": true,
			"directory": "",
			"overwrite": false,
			"skip": true
		},
		"1": {
			"genomefile": "",
			"gtffile": "",
			"indicesdir": "",
			"overwrite": null,
			"runThreadN": 24,
			"skip": true,
			"useKallisto": true,
			"usePiscem": true,
			"useSalmon": true,
			"useSplicei": true,
			"useSpliceu": true,
			"useStar": true
		},
		"10": {
			"aligndir": "",
			"cb_final_layer": "denoised",
			"cb_original_layer": "denoised",
			"cellbender_file": "cellbender/final_counts.h5ad",
			"features_dirs": [
				"/data/processing/morphic-test/test/counts/A"
			],
			"features_gex_dirs": "/storage/gex",
			"input_counts_name": "unfiltered_counts.h5ad",
			"output_counts_name": "merged_counts.h5ad",
			"output_features_name": "merged_features.h5ad"
		},
		"11": {
			"as_named": false,
			"averageReadLength": 250,
			"barcodePattern": "_R1_",
			"barcode_constant_offset": 0,
			"barcode_length": 16,
			"barcode_n": 1,
			"consumerThreads": 0,
			"debugmode": false,
			"feature_constant_offset": 26,
			"feature_n": 3,
			"features_file": "/data/project_14361_feature_ref_v2_202405_alt.csv",
			"forwardPattern": "_R2_",
			"imputfiles": [],
			"inputdirs": [
				"/storage/pooled_scRNA_seq_202401/A",
				"/storage/pooled_scRNA_seq_202401/B",
				"/storage/pooled_scRNA_seq_202401/C",
				"/storage/pooled_scRNA_seq_202401/D",
				"/storage/pooled_scRNA_seq_202401/E",
				"/storage/pooled_scRNA_seq_202401/F",
				"/storage/pooled_scRNA_seq_202401/G_1",
				"/storage/pooled_scRNA_seq_202401/G_2",
				"/storage/pooled_scRNA_seq_202401/H",
				"/storage/pooled_scRNA_seq_202401/I",
				"/storage/pooled_scRNA_seq_202401/J",
				"/storage/pooled_scRNA_seq_202401/L_1",
				"/storage/pooled_scRNA_seq_202401/L_2"
			],
			"keep_existing": true,
			"maxHammingDistance": 5,
			"maxThreads": 32,
			"maximum_mismatch": 3,
			"minPosterior": 0.975,
			"min_counts": 0,
			"nprocesses": 6,
			"outputdir": "/storage/gex",
			"parallelbyFile": false,
			"process_in_order": false,
			"readBufferLines": 2048,
			"reversePattern": "_R3_",
			"reverse_complement": false,
			"searchThreads": 4,
			"skip": false,
			"stringency": 1,
			"umi_length": 12,
			"whitelist": "/data/processing/genome/10x_version3_whitelist.txt"
		},
		"12": {
			"filename": ""
		},
		"2": {
			"CBLEN": 16,
			"R1pattern": "_R1_",
			"R2pattern": "_R2_",
			"UMILEN": 12,
			"concatenate_files": false,
			"fastq_suffix": "fastq.gz",
			"fastqdirs": [
				"/storage/pooled_scRNA_seq_202401/G_2",
				"/storage/pooled_scRNA_seq_202401/H",
				"/storage/pooled_scRNA_seq_202401/I",
				"/storage/pooled_scRNA_seq_202401/J",
				"/storage/pooled_scRNA_seq_202401/L_1",
				"/storage/pooled_scRNA_seq_202401/L_2"
			],
			"gzipped_fastq": true,
			"indicesdir": "",
			"kallistocmd": "",
			"ntreads": 14,
			"organize_samples": false,
			"outputdir": "",
			"overwrite": true,
			"piscemcmd": "",
			"salmoncmd": "",
			"sampledirs": null,
			"skip": false,
			"starcmd": "",
			"useKallisto": true,
			"usePiscem": true,
			"useSalmon": true,
			"useSplicei": true,
			"useSpliceu": true,
			"useStar": true,
			"whitelist": "/storage/scRNAseq_output/whitelists/10x_version3_whitelist.txt"
		},
		"3": {
			"alignsdir": [
				"/data/storage/scRNAseq_output/Alignments/A",
				"/data/storage/scRNAseq_output/Alignments/B",
				"/data/storage/scRNAseq_output/Alignments/C",
				"/data/storage/scRNAseq_output/Alignments/D",
				"/data/storage/scRNAseq_output/Alignments/E",
				"/data/storage/scRNAseq_output/Alignments/F",
				"/data/storage/scRNAseq_output/Alignments/G_1",
				"/data/storage/scRNAseq_output/Alignments/G_2",
				"/data/storage/scRNAseq_output/Alignments/H",
				"/data/storage/scRNAseq_output/Alignments/I",
				"/data/storage/scRNAseq_output/Alignments/J",
				"/data/storage/scRNAseq_output/Alignments/L_1",
				"/data/storage/scRNAseq_output/Alignments/L_2"
			],
			"filter_features": true,
			"nThreads": 1,
			"overwrite": false,
			"skip": false
		},
		"4": {
			"inputfa": "",
			"inputfeaturefa": "/data/scRNAseq_output/features/all_genes.fasta",
			"inputfeaturegtf": "/data/scRNAseq_output/features/all_genes.gtf",
			"inputgtf": "",
			"outputfa": "",
			"outputgtf": "",
			"overwritefiles": null,
			"skip": true
		},
		"5": {
			"additional_flags": "",
			"alignsDir": [],
			"cb_counts_file": "cellbender_counts.h5",
			"cb_subdir": "cellbender",
			"cpu_cores": 16,
			"input_pattern": "counts.h5ad",
			"layername": "denoised",
			"nThreads": 1,
			"output_pattern": "final_counts.h5ad",
			"overwrite_cellbender": true,
			"overwrite_layer": true,
			"skip": false,
			"usecpu": false
		},
		"6": {
			"as_named": false,
			"averageReadLength": 250,
			"barcodePattern": "_R1_",
			"barcode_constant_offset": 0,
			"barcode_length": 16,
			"barcode_n": 1,
			"consumerThreads": 4,
			"debugmode": false,
			"feature_constant_offset": 26,
			"feature_n": 3,
			"features_file": "/data/project_14361_feature_ref_v2_202405_alt.csv",
			"forwardPattern": "_R2_",
			"imputfiles": [],
			"inputdirs": [
				"/storage/pooled_scRNA_seq_202401/larry-barcodes/A",
				"/storage/pooled_scRNA_seq_202401/larry-barcodes/B",
				"/storage/pooled_scRNA_seq_202401/larry-barcodes/C",
				"/storage/pooled_scRNA_seq_202401/larry-barcodes/D",
				"/storage/pooled_scRNA_seq_202401/larry-barcodes/E",
				"/storage/pooled_scRNA_seq_202401/larry-barcodes/F",
				"/storage/pooled_scRNA_seq_202401/larry-barcodes/G_1",
				"/storage/pooled_scRNA_seq_202401/larry-barcodes/G_2",
				"/storage/pooled_scRNA_seq_202401/larry-barcodes/H",
				"/storage/pooled_scRNA_seq_202401/larry-barcodes/I",
				"/storage/pooled_scRNA_seq_202401/larry-barcodes/J",
				"/storage/pooled_scRNA_seq_202401/larry-barcodes/L_1",
				"/storage/pooled_scRNA_seq_202401/larry-barcodes/L_2"
			],
			"keep_existing": true,
			"maxHammingDistance": 5,
			"maxThreads": 32,
			"maximum_mismatch": 3,
			"minPosterior": 0.975,
			"min_counts": 0,
			"nprocesses": 6,
			"outputdir": "",
			"parallelbyFile": false,
			"process_in_order": false,
			"readBufferLines": 2048,
			"reversePattern": "_R3_",
			"reverse_complement": false,
			"searchThreads": 2,
			"skip": false,
			"stringency": 1,
			"umi_length": 12,
			"whitelist": "/data/processing/genome/10x_version3_whitelist.txt"
		},
		"7": {
			"aligneddir": "/data/processing/morphic-test/test/alignedfiles",
			"alignedfiles": {
				"findDir": false,
				"findFile": true,
				"pattern": "*.bam",
				"root": "/data/processing/morphic-test/test/alignedfiles",
				"value": null
			},
			"annotation_file": "/data/scRNAseq_output_test/genome/genome.gtf",
			"awscredentialsdir": "/data/.aws",
			"countsdir": "/data/processing/morphic-test/test/counts",
			"download_dir": "/data/scRNAseq_output_test/genome",
			"downloadindexlink": true,
			"fastqfiles": [],
			"genome_dir": "/data/scRNAseq_output_test/genome",
			"genome_file": "/data/scRNAseq_output_test/genome/genome.fa",
			"genomegtfURLs": null,
			"overwrite": false,
			"raw_annotation_file": "/data/scRNAseq_output_test/genome/gencode.v44.primary_assembly.annotation.gtf",
			"raw_genome_file": "/data/scRNAseq_output_test/genome/Homo_sapiens.GRCh38.dna.primary_assembly.fa",
			"s3bucket": "morphic-bio-processing",
			"s3destdirectory": "processed/morphic-test/test",
			"s3downloaddir": "/data/morphic-bio-processing/morphic-test/test",
			"s3sourcedirectory": "morphic-test/test",
			"skip_indexing": true,
			"transcriptomefile": "/data/scRNAseq_output_test/genome/transcriptome.fa",
			"useKallisto": true,
			"usePiscem": true,
			"useSalmon": true,
			"useSplicei": true,
			"useSpliceu": true,
			"useStar": true,
			"work_dir": "/data/scRNAseq_output_test"
		},
		"8": {
			"alignsDir": null,
			"maxgenes": 2500,
			"mingenes": 200,
			"mtpercent": 5,
			"n_mad": 3,
			"nthreads": 1,
			"overwrite": true,
			"skip": false
		},
		"9": {
			"aligns_dirs": [],
			"aligns_patterns": [],
			"counts_dir": [
				"/data/storage/scRNAseq_output/Alignments/A",
				"/data/storage/scRNAseq_output/Alignments/B",
				"/data/storage/scRNAseq_output/Alignments/C",
				"/data/storage/scRNAseq_output/Alignments/D",
				"/data/storage/scRNAseq_output/Alignments/E",
				"/data/storage/scRNAseq_output/Alignments/F",
				"/data/storage/scRNAseq_output/Alignments/G_1",
				"/data/storage/scRNAseq_output/Alignments/G_2",
				"/data/storage/scRNAseq_output/Alignments/H",
				"/data/storage/scRNAseq_output/Alignments/I",
				"/data/storage/scRNAseq_output/Alignments/J",
				"/data/storage/scRNAseq_output/Alignments/L_1",
				"/data/storage/scRNAseq_output/Alignments/L_2"
			],
			"counts_patterns": [],
			"features_dirs": [],
			"features_patterns": "",
			"output_dir": "/data/storage/outputs"
		}
	},
	"Links": [
		{
			"SourceNodeId": 0,
			"SinkNodeId": 4,
			"SourceChannel": "directory",
			"SinkChannel": "trigger"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 0,
			"SourceChannel": "genomegtfURLs",
			"SinkChannel": "URL"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 0,
			"SourceChannel": "download_dir",
			"SinkChannel": "directory"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 4,
			"SourceChannel": "genome_file",
			"SinkChannel": "outputfa"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 4,
			"SourceChannel": "annotation_file",
			"SinkChannel": "outputgtf"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 4,
			"SourceChannel": "raw_genome_file",
			"SinkChannel": "inputfa"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 4,
			"SourceChannel": "raw_annotation_file",
			"SinkChannel": "inputgtf"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 0,
			"SourceChannel": "work_dir",
			"SinkChannel": "trigger"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 0,
			"SourceChannel": "skip_indexing",
			"SinkChannel": "skip"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 4,
			"SourceChannel": "skip_indexing",
			"SinkChannel": "skip"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 0,
			"SourceChannel": "overwrite",
			"SinkChannel": "overwite"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 4,
			"SourceChannel": "overwrite",
			"SinkChannel": "overwritefiles"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 6,
			"SourceChannel": "countsdir",
			"SinkChannel": "outputdir"
		},
		{
			"SourceNodeId": 4,
			"SinkNodeId": 1,
			"SourceChannel": "outputfa",
			"SinkChannel": "genomefile"
		},
		{
			"SourceNodeId": 4,
			"SinkNodeId": 1,
			"SourceChannel": "outputgtf",
			"SinkChannel": "gtffile"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 1,
			"SourceChannel": "skip_indexing",
			"SinkChannel": "skip"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 1,
			"SourceChannel": "usePiscem",
			"SinkChannel": "usePiscem"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 1,
			"SourceChannel": "useKallisto",
			"SinkChannel": "useKallisto"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 1,
			"SourceChannel": "useSplicei",
			"SinkChannel": "useSplicei"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 1,
			"SourceChannel": "genome_dir",
			"SinkChannel": "indicesdir"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 1,
			"SourceChannel": "overwrite",
			"SinkChannel": "overwrite"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 1,
			"SourceChannel": "useStar",
			"SinkChannel": "useStar"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 1,
			"SourceChannel": "useSpliceu",
			"SinkChannel": "useSpliceu"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 1,
			"SourceChannel": "useSalmon",
			"SinkChannel": "useSalmon"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 1,
			"SourceChannel": "work_dir",
			"SinkChannel": "Trigger"
		},
		{
			"SourceNodeId": 1,
			"SinkNodeId": 2,
			"SourceChannel": "indicesdir",
			"SinkChannel": "indicesdir"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 2,
			"SourceChannel": "useKallisto",
			"SinkChannel": "useKallisto"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 2,
			"SourceChannel": "useSpliceu",
			"SinkChannel": "useSplicei"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 2,
			"SourceChannel": "useSalmon",
			"SinkChannel": "useSalmon"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 2,
			"SourceChannel": "usePiscem",
			"SinkChannel": "usePiscem"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 2,
			"SourceChannel": "useStar",
			"SinkChannel": "useStar"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 2,
			"SourceChannel": "useSplicei",
			"SinkChannel": "useSpliceu"
		},
		{
			"SourceNodeId": 7,
			"SinkNodeId": 2,
			"SourceChannel": "aligneddir",
			"SinkChannel": "outputdir"
		},
		{
			"SourceNodeId": 2,
			"SinkNodeId": 3,
			"SourceChannel": "outputdir",
			"SinkChannel": "inputDir"
		},
		{
			"SourceNodeId": 8,
			"SinkNodeId": 5,
			"SourceChannel": "tablesDir",
			"SinkChannel": "trigger"
		},
		{
			"SourceNodeId": 3,
			"SinkNodeId": 8,
			"SourceChannel": "alignsdir",
			"SinkChannel": "alignsDir"
		},
		{
			"SourceNodeId": 6,
			"SinkNodeId": 11,
			"SourceChannel": "outputdir",
			"SinkChannel": "trigger"
		},
		{
			"SourceNodeId": 2,
			"SinkNodeId": 10,
			"SourceChannel": "outputdir",
			"SinkChannel": "aligndir"
		},
		{
			"SourceNodeId": 11,
			"SinkNodeId": 10,
			"SourceChannel": "outputdir",
			"SinkChannel": "Trigger"
		},
		{
			"SourceNodeId": 5,
			"SinkNodeId": 10,
			"SourceChannel": "tablesDir",
			"SinkChannel": "Trigger2"
		}
	]
}